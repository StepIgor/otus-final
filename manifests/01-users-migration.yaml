apiVersion: batch/v1
kind: Job
metadata:
  name: users-postgre-migration
spec:
  completions: 1
  parallelism: 1
  template:
    spec:
      containers:
        - name: migrate
          image: postgres:15-alpine
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: users-secret
                  key: DB_PSWD
            - name: PGHOST
              valueFrom:
                configMapKeyRef:
                  name: users-config
                  key: DB_HOST
            - name: PGUSER
              valueFrom:
                configMapKeyRef:
                  name: users-config
                  key: DB_USER
            - name: PGDATABASE
              valueFrom:
                configMapKeyRef:
                  name: users-config
                  key: DB_NAME
          command:
            - /bin/sh
            - -c
            - |
              echo "
              CREATE TABLE IF NOT EXISTS roles (
                  id INT PRIMARY KEY,
                  name VARCHAR(8) NOT NULL UNIQUE
              );
              CREATE TABLE IF NOT EXISTS users (
                  id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
                  email VARCHAR(64) UNIQUE NOT NULL,
                  nickname VARCHAR(32) UNIQUE NOT NULL,
                  password_hash CHAR(60) NOT NULL,
                  name VARCHAR(32) NOT NULL,
                  surname VARCHAR(64) NOT NULL,
                  birthdate DATE NOT NULL,
                  roleid INT NOT NULL,
                  FOREIGN KEY (roleid) REFERENCES roles(id)
              );
              INSERT INTO roles (id, name)
              VALUES (1, 'admin'), (2, 'user'), (3, 'seller')
              ON CONFLICT (id) DO NOTHING;
              " | psql
      restartPolicy: OnFailure
