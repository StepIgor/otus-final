events {}
http {
  # Для статического resolver прописываем здесь сервисы
  upstream billing-service {
    server billing-service;
  }

  upstream users-service {
    server users-service;
  }

  # Привязка сервисов по первому сегменту пути
  map $request_uri $target_service {
    # Условие по умолчанию — специальный маркер ""
    default                         "";
    ~^/api/users                    users-service;
    ~^/api/billing                  billing-service;
  }

  server {
    listen 80;

    location /auth/refresh-token {
      proxy_pass http://users-service/v1/refresh-token;
    }

    location /auth/login {
      proxy_pass http://users-service/v1/login;
    }

    location /auth/register {
      proxy_pass http://users-service/v1/register;
    }

    location /api/ {
      if ($target_service = "") {
        return 404;
      }

      if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin "http://localhost:5173";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-User-Id";
        add_header Access-Control-Max-Age 3600;
        return 204;
      }

      auth_request /auth/validate;
      auth_request_set $user_id $upstream_http_x_user_id;
      proxy_set_header X-User-Id $user_id;

      rewrite ^/api/[^/]+/(.*)$ /$1 break;

      proxy_pass http://$target_service;
    }

    location = /auth/validate {
      internal;
      proxy_pass http://users-service/v1/validate;
      proxy_pass_request_body off;
      proxy_set_header Content-Length 0;
      proxy_set_header X-Original-URI $request_uri;
    }
  }
}
